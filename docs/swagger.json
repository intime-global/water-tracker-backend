{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Users app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of users app"
  },
  "servers": [
    {
      "url": "https://api.water-tracker.online"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user all parameters",
        "operationId": "getUser",
        "description": "Get user all parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "example": "Jonni"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          },
          {
            "in": "query",
            "name": "daylyNorm",
            "schema": {
              "type": "string"
            },
            "example": 1500
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Johni Dap"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "Lui_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "123Den"
                  },
                  "gender": {
                    "description": "Your gender identify",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  },
                  "daylyNorm": {
                    "description": "User's daylyNorm",
                    "type": "number",
                    "example": 1800
                  },
                  "photo": {
                    "description": "Link to user's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update card user by id",
        "operationId": "patchUser",
        "description": "Patch user by id, and update with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "example": "123Di@gmail.com"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "Lui_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "123Di@gmail.com"
                  },
                  "gender": {
                    "description": "Your gender identify",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  },
                  "daylyNorm": {
                    "description": "User's daylyNorm",
                    "type": "number",
                    "example": 1800
                  },
                  "photo": {
                    "description": "Link to user's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully upsert user with id !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update card user avatar",
        "operationId": "patchUserAvatar",
        "description": "Patch user avatar, and update with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "photo",
            "schema": {
              "type": "string"
            },
            "example": "binary"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "photo"
                ],
                "properties": {
                  "photo": {
                    "description": "Link to user's photo or avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully upsert user avatar !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "example": "Jonni"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "example": "111223Jn"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "example": "111223Jn"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logouthUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logout user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user",
        "operationId": "refreshUser",
        "description": "Refresh users token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh users token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refresh users token!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/waters": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create WaterCard",
        "operationId": "postWaterCard",
        "description": "Create a WaterCard with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "amount"
                ],
                "properties": {
                  "date": {
                    "description": "User's date",
                    "type": "number",
                    "example": "2024-12-10T19:02"
                  },
                  "amount": {
                    "description": "User's water amount",
                    "type": "number",
                    "example": 50
                  },
                  "daylyNorm": {
                    "description": "User's daylyNorm water",
                    "type": "number",
                    "example": 1500
                  },
                  "servings": {
                    "description": "User's servings",
                    "type": "number",
                    "example": 50
                  },
                  "planDaylyNorm": {
                    "description": "User's planDaylyNorm",
                    "type": "number",
                    "example": 1800
                  },
                  "curDaylyNorm": {
                    "description": "User's curDaylyNorm",
                    "type": "number",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a water card",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a water card!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get All waters card",
        "operationId": "getWater",
        "description": "Get All waters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get All waters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found waters card !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "Jonni_Do13@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "123Den"
          },
          "gender": {
            "description": "Your gender identify",
            "type": "string",
            "enum": [
              "women",
              "man"
            ]
          },
          "daylyNorm": {
            "description": "User's daylyNorm",
            "type": "number",
            "example": 1800
          },
          "photo": {
            "description": "Link to user's photo or avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "userId",
          "date",
          "amount"
        ],
        "properties": {
          "userId": {
            "description": "User's id",
            "type": "string",
            "example": 12
          },
          "date": {
            "description": "User's date",
            "type": "number",
            "example": "2024-12-10T19:02"
          },
          "amount": {
            "description": "User's amount",
            "type": "number",
            "example": 50
          },
          "curDaylyNorm": {
            "description": "User's amount",
            "type": "number",
            "example": 1500
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}