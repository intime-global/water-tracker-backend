{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Water tracker app"
  },
  "servers": [
    {
      "url": "https://api.water-tracker.online"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user all parameters",
        "operationId": "getUser",
        "description": "Get user all parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all user parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found all user parameters!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update card user by id",
        "operationId": "patchUser",
        "description": "Patch user by id, and update with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "Lui_Doe123@gmail.com"
                  },
                  "oldPassword": {
                    "description": "User's oldPassword",
                    "type": "string",
                    "example": "123oldPassword"
                  },
                  "newPassword": {
                    "description": "User's newPassword",
                    "type": "string",
                    "example": "123newPassword"
                  },
                  "gender": {
                    "description": "Your gender identify",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully upsert user with id !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update card user avatar",
        "operationId": "patchUserAvatar",
        "description": "Patch user avatar, and update with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "photo"
                ],
                "properties": {
                  "photo": {
                    "description": "Link to user's photo or avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user by avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully upsert user avatar !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "kat8@example.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn",
                    "minLength": 8,
                    "maxLength": 64
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User successfully registred"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn",
                    "minLength": 8,
                    "maxLength": 64
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logs out the user",
        "security": [],
        "parameters": [
          {
            "name": "sessionId",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session ID stored in the cookie used to identify the user's session."
          }
        ],
        "responses": {
          "204": {
            "description": "Logout a user"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh token of user",
        "operationId": "refreshTokenUser",
        "description": "Refresh the user's access token using the refresh token stored in cookies.",
        "security": [],
        "responses": {
          "200": {
            "description": "Refreshed a session of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "mWv3Qm6b1XJof0rOJSfuZCkuA07zM0fHmWOGYcY9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset email to user",
        "operationId": "sednRestEmailToUser",
        "description": "Send email to user to reset password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "kat8@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Send reset password email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset a user's password with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "token"
                ],
                "properties": {
                  "password": {
                    "description": "User new password",
                    "type": "string",
                    "example": "111223Jn",
                    "minLength": 8,
                    "maxLength": 64
                  },
                  "token": {
                    "description": "User's token from url",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NzMzZTU1MWNlZTI4ZGVkYjQ2ZjhlNWMiLCJlbWFpbCI6ImFubmFsYWt1c0B1a3IubmV0IiwiaWF0IjoxNzMxNjIzMjc0LCJleHAiOjE3MzE2MjM1NzR9.KQyctEJouw58BZbNHAiVl-dtFnnRpipb8OHj_hOjGQo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate Google OAuth URL",
        "operationId": "getGoogleOAuthUrl",
        "description": "Generates a Google OAuth URL to redirect users for authentication",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully generated Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "url"
                      ],
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Google OAuth URL to be used for redirecting users to authentication",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=your-client-id&redirect_uri=https://your-redirect-uri&scope=https://www.googleapis.com/auth/userinfo.email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or expired authorization code",
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Internal server error",
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create WaterNote",
        "operationId": "postWaterNote",
        "description": "Create a WaterNote with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "waterVolume"
                ],
                "properties": {
                  "date": {
                    "description": "The date the WaterNote created",
                    "type": "string",
                    "example": "2024-12-10T19:02:23"
                  },
                  "waterVolume": {
                    "description": "Еhe amount of water consumed by user",
                    "type": "number",
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a water card",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully create a water note!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/rate": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch WaterRate of user",
        "operationId": "patchWaterRate",
        "description": "Patch WaterRate of user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "waterRate"
                ],
                "properties": {
                  "waterRate": {
                    "description": "Planned daily rate of water consumption for the user",
                    "type": "number",
                    "example": "2000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user's waterRate!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user's waterRate!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get a list of WaterNotes for one day",
        "operationId": "getWaterNotes",
        "description": "Get a list of notes of water consumption for one day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found notes of water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found notes of water!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "notes",
                        "percentage"
                      ],
                      "properties": {
                        "notes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        },
                        "percentage": {
                          "type": "number",
                          "example": 60
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get a list of WaterNotes for one month",
        "operationId": "getWaterNotesMonth",
        "description": "Get a list of notes of water consumption for the selected month. If parameters are not passed, the request by default returns a list for the current month of the current year.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "example": 12
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "example": 2024
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found water notes!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water notes!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "day",
                          "month",
                          "year",
                          "waterVolume",
                          "waterRate",
                          "consumedTimes",
                          "percentage"
                        ],
                        "properties": {
                          "day": {
                            "description": "The date of the month for which the rwater notes were received",
                            "type": "string",
                            "example": "11"
                          },
                          "month": {
                            "description": "The month for which the water notes were received",
                            "type": "string",
                            "example": "12"
                          },
                          "year": {
                            "description": "The year for which the water notes were received",
                            "type": "string",
                            "example": "2024"
                          },
                          "waterVolume": {
                            "description": "Volume of water consumed for the selected day",
                            "type": "number",
                            "example": 900
                          },
                          "waterRate": {
                            "description": "Rate of water consumption",
                            "type": "number",
                            "example": 1500
                          },
                          "consumedTimes": {
                            "description": "Number of water consumption notes for the selected day",
                            "type": "number",
                            "example": 5
                          },
                          "percentage": {
                            "description": "The percentage of fulfillment of the daily norm",
                            "type": "number",
                            "example": 60
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get a list of WaterNotes for requested day",
        "operationId": "getDayWaterNotes",
        "description": "Get a list of notes of water consumption for requested day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "schema": {
              "type": "integer",
              "example": 22
            },
            "required": true
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "example": 12
            },
            "required": true
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "example": 2024
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found notes of water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found notes of water!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "notes",
                        "percentage"
                      ],
                      "properties": {
                        "notes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        },
                        "percentage": {
                          "type": "number",
                          "example": 60
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{waterNoteId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch waterNote by id",
        "operationId": "patchWaterNote",
        "description": "Patch WaterNote by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterNoteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "Date of WaterNote",
                    "type": "string",
                    "example": "2024-12-15T14:23:12"
                  },
                  "waterVolume": {
                    "description": "The amount of water consumed",
                    "type": "number",
                    "example": "130"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a waterNote!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a waterNote!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete WaterNote by id",
        "operationId": "deleteWaterNote",
        "description": "Delete WaterNote by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterNoteId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete WaterNote by id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "gender",
          "waterRate",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "Jonni_Do13@gmail.com"
          },
          "gender": {
            "description": "Your gender identify",
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "waterRate": {
            "description": "User's dailyNorma",
            "type": "number",
            "example": 1800
          },
          "photo": {
            "description": "Link to user's photo or avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "createdAt": {
            "description": "The date the User's card was created",
            "type": "string",
            "example": "2024-12-13T01:54:18.925Z"
          },
          "updatedAt": {
            "description": "The date the User's card was updated",
            "type": "string",
            "example": "2024-12-15T01:19:29.980Z"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "year",
          "month",
          "day",
          "time",
          "waterRate",
          "waterVolume",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "WaterNote's id",
            "type": "string",
            "example": "675b93cab74997639d8e7476"
          },
          "userId": {
            "description": "User's id",
            "type": "string",
            "example": "675b8d979f14991c4126ba15"
          },
          "year": {
            "description": "Year of WaterNote",
            "type": "string",
            "example": "2024"
          },
          "month": {
            "description": "Month of WaterNote",
            "type": "string",
            "example": "12"
          },
          "day": {
            "description": "Day of WaterNote",
            "type": "string",
            "example": "14"
          },
          "time": {
            "description": "Time of WaterNote",
            "type": "string",
            "example": "11:15:05"
          },
          "waterRate": {
            "description": "Current daily rate for user",
            "type": "number",
            "example": 2000
          },
          "waterVolume": {
            "description": "Volume of water consumed",
            "type": "number",
            "example": 250
          },
          "createdAt": {
            "description": "The date the WaterNote was created",
            "type": "string",
            "example": "2024-12-13T01:54:18.925Z"
          },
          "updatedAt": {
            "description": "The date the WaterNote was updated",
            "type": "string",
            "example": "2024-12-15T01:19:29.980Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "BadRequestError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "error": {
                  "type": "string",
                  "description": "Detailed error message for debugging purposes.",
                  "example": "Unexpected database error occurred"
                }
              }
            }
          }
        }
      }
    }
  }
}