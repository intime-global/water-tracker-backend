# get
tags:
  - Users
summary: Get user all parameters
operationId: getUser
description: 'Get user all parameters'
security:
  - bearerAuth: []
parameters:
  - in: query
    name: name
    schema:
      type: string
    example: 'Jonni'
  - in: query
    name: email
    schema:
      type: string
    example: 'Jonni_Do1@gmail.com'
  - in: query
    name: daylyNorm
    schema:
      type: string
    example: 1500
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - email
          - password
        properties:
          name:
            description: "User's name"
            type: string
            example: 'Johni Dap'
          email:
            description: "User's email"
            type: string
            example: 'Lui_Doe123@gmail.com'
          password:
            description: "User's password"
            type: string
            example: '123Den'
          gender:
            description: 'Your gender identify'
            type: string
            enum: ['women', 'man']
          daylyNorm:
            description: "User's daylyNorm"
            type: number
            example: 1800
          photo:
            description: "Link to user's photo"
            type: string
            format: binary
responses:
  '200':
    description: 'Get user by id'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully found user with id 65ca67e7ae7f10c88b598384!
            data:
              type: object
              $ref: '../../components/schemas/user.yaml'
  '401':
    $ref: '../../components/responses/401.yaml'
  '404':
    $ref: '../../components/responses/404.yaml'
